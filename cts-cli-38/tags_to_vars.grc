options:
  parameters:
    author: Jonathan Andersson
    category: '[RF Over IP]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: hb
    hier_block_src_path: '.:'
    id: tags_to_vars
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Tags to Vars
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: epy_tags_to_vars
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nfrom __future__ import\
      \ print_function\nimport numpy as np\nfrom gnuradio import gr\nimport pmt\n\n\
      print(\"Tags to Var imported\")\n\nclass blk(gr.basic_block):\n    \"\"\"Tags\
      \ to Vars\"\"\"\n\n    def __init__(self, parent=self if 'self' in locals()\
      \ else None, tag_map={\"rx_rate\": \"set_samp_rate(value)\"}): # only default\
      \ arguments here\n        \"\"\"arguments to this function show up as parameters\
      \ in GRC\"\"\"\n        gr.basic_block.__init__(\n        #gr.sync_block.__init__(\n\
      \            self,\n            name='Tags to Vars',   # will show up in GRC\n\
      \            in_sig=[np.complex64],\n            out_sig=[]\n        )\n   \
      \     # if an attribute with the same name as a parameter is found, a callback\
      \ is registered (properties work, too).\n        self.parent = parent\n    \
      \    self.tag_map = tag_map\n        self.hist = {}\n        #self.tag_map =\
      \ {\"rx_rate\": \"set_samp_rate(value)\"}\n\n        print(\"Tags to Var initialized\\\
      n\\n\\n\")\n\n        self.set_tag_propagation_policy(0) #gr_extras.TPP_DONT\n\
      \        return\n\n    def general_work(self, input_items, output_items): #basic_block\n\
      \    #def work(self, input_items, output_items): #sync_block\n\n        if self.parent\
      \ is not None:\n            packet_begin_tags = self.get_tags_in_window(0, 0,\
      \ len(input_items[0]))\n            for tag in packet_begin_tags:\n        \
      \        #offset = tag.offset\n                key = pmt.symbol_to_string(tag.key)\n\
      \                value = pmt.to_python(tag.value)\n                if key in\
      \ self.tag_map:\n                    if key not in self.hist:\n            \
      \            self.hist[key] = None\n                    if value != self.hist[key]:\n\
      \                        print(key, '=', value)\n                        self.hist[key]\
      \ = value\n                    eval(\"self.parent.%s\" % (self.tag_map[key]))\n\
      \n        self.consume_each(len(input_items[0]))\n        return 0\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    parent: parent
    tag_map: tag_map
  states:
    _io_cache: '(''Tags to Vars'', ''blk'', [(''parent'', ''None''), (''tag_map'',
      "{''rx_rate'': ''set_samp_rate(value)''}")], [(''0'', ''complex'', 1)], [],
      ''Tags to Vars'', [''parent'', ''tag_map''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 132]
    rotation: 0
    state: enabled
- name: pad_source_0
  id: pad_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: in
    maxoutbuf: '0'
    minoutbuf: '0'
    num_streams: '1'
    optional: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 140]
    rotation: 0
    state: enabled
- name: parent
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Parent
    short_id: ''
    type: ''
    value: self if 'self' in locals() else None
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 12]
    rotation: 0
    state: enabled
- name: tag_map
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Tag Map
    short_id: ''
    type: ''
    value: '{"rx_rate": "set_samp_rate(value)"}'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 12]
    rotation: 0
    state: enabled

connections:
- [pad_source_0, '0', epy_tags_to_vars, '0']

metadata:
  file_format: 1
